#! /bin/sh

# chkconfig: 345 85 60
# description: Starts the worker-qemu module of OurGrid(ourgrid.org)
# processname: worker

### BEGIN INIT INFO
# Provides:          ourgrid-worker-qemu
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts the worker-qemu module of OurGrid(ourgrid.org)
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Starts the worker-qemu module of OurGrid(ourgrid.org)"
NAME=worker
DAEMON=/usr/bin/$NAME
DAEMON_ARGS="start"
PIDPATH=/var/run/ourgrid
SCRIPTNAME=/etc/init.d/$NAME
PUSER=ourgrid

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
[ -r /lib/init/vars.sh ] && . /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
[ -r /lib/lsb/init-functions ] && . /lib/lsb/init-functions

# Source function library.
[ -r /etc/rc.d/init.d/functions ] && . /etc/rc.d/init.d/functions

log_daemon_msg() { 
	logger "$@"; 
}

log_end_msg() {
	[ $1 -eq 0 ] && RES=OK; 
	logger ${RES:=FAIL}; 
}

#
# Function that starts the daemon/service
#
do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   2 if daemon could not be started
	mkdir -p $PIDPATH
	chown -R ourgrid:ourgrid $PIDPATH
	daemon --user=$PUSER 19 $DEAMON start
	return "$?"
}

#
# Function that stops the daemon/service
#
do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   2 if daemon could not be stopped
	#   other if a failure occurred
	daemon --user=$PUSER 19 $DEAMON stop
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2
	
    for PIDFILE in `ls $PIDPATH/worker*.pid`; do
    	killproc -p $PIDFILE $DAEMON
    	rm -f $PIDFILE
    done

	return "$RETVAL"
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
       ;;
 #reload|force-reload)
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
