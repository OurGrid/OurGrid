#!/bin/bash
	
	# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	#
	# Package:		OurGrid 4.0
	#
	# Copyright (c) 2002-2006 Universidade Federal de Campina Grande 
	# 
	# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Setting macros
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
OK=0
NOK=1

# Setting error codes (from 2 to 254)
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ERR_BASE=64
ERR_STD_MISUSE=$(($ERR_BASE))
ERR_OGROOT_NOT_DEFINED=$(($ERR_BASE+1))
ERR_JAVAOPTIONS_NOT_DEFINED=$(($ERR_BASE+2))
ERR_CLASSPATH_NOT_DEFINED=$(($ERR_BASE+3))
ERR_JAVA_NOT_FOUND=$(($ERR_BASE+4))
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

commandmanager="org.ourgrid.worker.ui.sync.Main"
stopcommand="stop"
statuscommand="status"
guicommand="gui"
GUImain="org.ourgrid.worker.ui.async.Main"
index=$2
OGLIB="/usr/lib/ourgrid"
OGROOT="/etc/ourgrid/worker-qemu"$index"/"
QEMU_HOME="/etc/ourgrid/qemu/bin"
LOG4J="-Dlog4j.configuration=file"$OGROOT"log4j.cfg.xml"
PIDFILE="/var/run/ourgrid/worker."$index".pid"

findogroot(){
	export OGROOT="/etc/ourgrid/worker-qemu"$index"/"
	if [ -z "$OGROOT" ]; then
		echo "ERR_OGROOT_NOT_DEFINED"
		return $ERR_OGROOT_NOT_DEFINED
	else
		return $OK
	fi
}

usage(){

if [ $# -eq 0 ]; then
	echo "Usage: worker command [command-options-and-arguments]"
	echo "	where command is gui, start, stop, status or restart"
	echo "	where command-options-and-arguments depend on the specific command"
	echo
	echo "For OurGrid updates and additional information, see the "
	echo "OurGrid Project home page at http://www.ourgrid.org/ "
else
	case "$1" in
		start) echo "help $1"
		;;
		stop) echo "help $1"
		;;
		status) echo "help $1"
		;;
		restart) echo "help $1"
		;;
		gui) echo "help $1"
		;;
		*) echo "not implemented" 
	esac
fi
exit $ERR_STD_MISUSE 
}


usage_commands(){

	UNK_CMD=$1
	
	echo "WORKER: Unknown command '$UNK_CMD'"
	echo
	echo "Worker commands are:"
	echo "   start       Start OurGrid worker"
	echo "   restart     Stop and start OurGrid worker"
	echo "	stop        Stop OurGrid worker"
	echo "	status      Verify OurGrid worker"
	echo "	gui         Start Worker's GUI"
}


execute() {
	command=$1
	wcmdname="org.ourgrid.worker.ui.sync.Main"
	
	if [ ! -n "$DISPLAY" ]; then
		export DISPLAY=:0
	fi

	if [ $INVOKED_BY_UAADMIN -eq 0 ]; then
		java -Xmx1024m $LOG4J -Dqemu.home=$QEMU_HOME -classpath $CLASSPATH $wcmdname $command  &
	    pid=$!
	    sleep 7
	else
		# This is necessary for ssh not hang during uaadmin
		# execution 
		java -Xmx1024m $LOG4J -Dqemu.home=$QEMU_HOME -classpath $CLASSPATH $wcmdname $command </dev/null 1>/dev/null 2>&1 &
	    pid=$!
	    sleep 20
	fi
	
	echo $pid > $PIDFILE
	
    if [ `ps -p $pid >/dev/null; echo $?` -ne 0 ]
    then
		wait $pid
        exit $?
    fi	
}

# Show OurGrid Worker Status
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
status() {
	java -Xmx1024m $LOG4J -classpath $CLASSPATH "$commandmanager" "$statuscommand"
	exit $?
}

# Stop OurGrid Worker
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
stop() {
	java -Xmx1024m $LOG4J -classpath $CLASSPATH "$commandmanager" "$stopcommand"
	exit $?
}

# Start Worker's Gui
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
gui() {
	java -Xmx1024m $LOG4J -classpath $CLASSPATH "$GUImain" "$guicommand"
	exit $?
}		

printerrdescr()
{
	errcode=$1
	case $1 in
		$ERR_STD_MISUSE)
			echo "Syntax error" ;;
		$ERR_JAVAOPTIONS_NOT_DEFINED)
			echo "Java options not defined" ;;
		$ERR_CLASSPATH_NOT_DEFINED)
			echo "CLASSPATH variable not defined" ;;
		$ERR_JAVA_NOT_FOUND)
			echo "Could not find a valid Java VM" ;;
		*)
			echo "Unknown error ($1)" ;;
	esac
}

setclasspath() {
	PWD_=`pwd`
	mypath=.
	cd $OGROOT

	for i in `ls $OGLIB/*.jar`; do
		myclass=$i
		mypath=$mypath:$myclass
	done

	CLASSPATH=$mypath

	if [ -z "$CLASSPATH" ]; then
		return $ERR_CLASSPATH_NOT_DEFINED
	else
		return $OK
	fi
}

	# --------- Main -------- #
	so=`uname`
	case $so in
		FreeBSD)
			GM=`hostname`
			;;
		*)
			GM=`hostname -f`
			;;
	esac
	nargs=$#

	if [ $nargs -eq 3 ]; then
		INVOKED_BY_UAADMIN=1
	else 
		INVOKED_BY_UAADMIN=0
		if [ $nargs -eq 0 ] || [ $nargs -gt 3 ]; then
			usage
		fi
	fi

	COMMAND_NAME=$1

	if 	[ "$COMMAND_NAME" = "start" ] || 
		[ "$COMMAND_NAME" = "gui" ] || 
		[ "$COMMAND_NAME" = "stop" ] || 
		[ "$COMMAND_NAME" = "status" ] || 
		[ "$COMMAND_NAME" = "restart" ]; then
		findogroot && setclasspath
		ret=$?
		
		if [ $ret -ne $OK ]; then
			errcode=$ret
			printerrdescr $errcode
			exit $errcode
		fi
	else
		usage
	fi
	
	case "$COMMAND_NAME" in
	start)
		execute start
		;;
	status)
		status
		;;
	stop)
		stop
		;;
	restart)
		stop
		execute start
		;;
	gui)
		gui
		;;
	*) usage
		esac

	exit $ret

