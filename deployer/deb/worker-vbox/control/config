#!/bin/bash
# Source debconf library.
. /usr/share/debconf/confmodule

min() {
  if [ "$1" -gt "$2" ]; then
    echo "$2"
  else
    echo "$1"
  fi
}

memory() {
  TOTAL_MEM=`grep MemTotal /proc/meminfo | awk '{print $2}'`
  SO_MEM=`expr 512 \* 1024`
  ALLOCABLE_MEM=`expr $TOTAL_MEM - $SO_MEM`
  VM_MEM=`expr 256 \* 1024`
  NUM_WORKERS_BY_MEM=`expr $ALLOCABLE_MEM / $VM_MEM`
  echo $NUM_WORKERS_BY_MEM
}

space_available() {
  DEVICE=`df -P /etc | tail -1 | cut -d' ' -f 1`
  SPACE_AVAILABLE=`df -B 1073741824 | grep -w $DEVICE | awk '{print $4}'`
  NUM_WORKERS_BY_SPACE=`expr $SPACE_AVAILABLE / 10`
  echo $NUM_WORKERS_BY_SPACE
}

number_of_cores() {
  NUM_OF_PROCESSORS=`grep -c processor /proc/cpuinfo`
  echo $NUM_OF_PROCESSORS
}

# Get space available
NUMBER_OF_WORKERS_BY_SPACE=$(space_available)

# Get number of processors
NUMBER_OF_PROCESSORS=$(number_of_cores)

# Get number of workers by memory
NUM_OF_WORKERS_BY_MEM=$(memory)

# Recommend a number of workers
MIN_TEMP=$(min $NUMBER_OF_WORKERS_BY_SPACE $NUMBER_OF_PROCESSORS)
RECOMMENDED=$(min $MIN_TEMP $NUM_OF_WORKERS_BY_MEM)

db_subst ${package.name}/num_workers cpus $RECOMMENDED

# How many workers do you want to install?
db_input critical ${package.name}/num_workers || true
db_go

# Check their answer.
db_get ${package.name}/num_workers

while : ;
do
	if  echo "$RET" | egrep -q '^[0-9]+$' && [ "$RET" -ge 1 ]; then
		break
	else
		db_subst ${package.name}/invalid_num_workers cpus $recommended

   		db_input critical ${package.name}/invalid_num_workers || true
   		db_go || true
	
	   	db_get ${package.name}/invalid_num_workers
	 fi
done

db_set ${package.name}/username $(hostname)
db_input critical ${package.name}/username || true
db_go

db_set ${package.name}/servername xmpp.ourgrid.org
db_input critical ${package.name}/servername || true
db_go

db_set ${package.name}/password xmpp-password
db_input critical ${package.name}/password || true
db_go

db_input critical ${package.name}/peeraddress || true
db_go

db_input critical ${package.name}/virtualization || true
db_go

db_input critical ${package.name}/idlenessdetector || true
db_go

db_get ${package.name}/idlenessdetector

if echo $RET | egrep -q Yes 
then
	db_input critical ${package.name}/idlenesstime || true
	db_go
fi
