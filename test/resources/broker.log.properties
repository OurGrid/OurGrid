########## LOG CONFIGURATION FOR BROKER ##########

## Defining Mygrid Logger and Level. 
# The first parameter determines log4j Level. The most verbose Level is ALL (that activates all log levels), the current
# level sequence is: ALL - DEBUG - INFO - WARN - ERROR - FATAL - OFF
# The Second parameter determines the OurGrid Logger. It means that all log events rising from any class in any package
# bellow org.ourgrid package will be "captured" by this logger.
log4j.logger.org.ourgrid = DEBUG, ourgrid


#### TXT LOGGER DEFINITIONS ####

# Defining another Appender for OURGRID logger. An appender is responsible for writing log's events in some output.
# We use RollingFileAppender to make log backups.
log4j.appender.ourgrid = org.apache.log4j.RollingFileAppender

# Here, you can define the file path name where you want to write the XML log messages. If you don't set any
# file path name here, Broker will set this property with a default value defined when Broker wizard ran. 
log4j.appender.ourgrid.file =

# Defining a layout to write log messages. Here, you can define how the messages will be shown in your log output. The PatternLayout
# is a Layout defined by Log4j, and use pattern codes to define a layout. The pattern code that we use here will result in the following
# output example:
# [2005/09/29 10:40:25:100] INFO    org.ourgrid.mygrid.main.Main.main ==> Broker was successfully started!
log4j.appender.ourgrid.layout = org.apache.log4j.PatternLayout
log4j.appender.ourgrid.layout.conversionPattern = [%d{yyyy/MM/dd HH:mm:ss:SSS}] %-7p %c.%M ==> %m%n

# Determines if the new log messages will be appended to the end of the log file. If it is set `true`, new log messages will be appended,
# if it is set 'false', a new file will be created. 
log4j.appender.ourgrid.append = true

# It activates the Buffer Properties of Log4j. If this property is activated, the log messages that arrives in this appender will be stored
# in a buffer with a predefined size. When this size is reached, the appender will write all messages buffered in one time. If this
# property is turned off, an immediate flush will happen, i.e, when a new message arrives, it will be written immediately.
log4j.appender.ourgrid.BufferedIO = false

# You can define the buffer size used when the property BufferedIO is set as 'true'. The default value is 8192 (determined by log4j).
log4j.appender.ourgrid.BufferSize=4096


## Define the maximum log file size. If this size is reached, this file will be renamed and becomes a backup file, and a new log file will
# be created. 
log4j.appender.ourgrid.MaxFileSize=50MB


# When the log file reaches its maximum size, a backup file is created. This property defines
# how many backups will be created.  
log4j.appender.ourgrid.MaxBackupIndex=5

